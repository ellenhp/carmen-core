matrix:
  include:
    - language: rust
      sudo: required
      dist: focal
      cache: cargo
      rust:
        - stable

      before_script:
      - rustup component add rustfmt

      before_cache:
      - cargo install cargo-tarpaulin

      before_run:
      - if ! [ -x "$(command -v aws)" ]; then curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" ; unzip awscliv2.zip ; sudo ./aws/install ; fi
      - aws sts get-caller-identity


      script:
      - cargo clean
      - cargo fmt --all -- --check
      - cargo build
      - cargo test

    - language: node_js
      sudo: false
      os: linux
      dist: focal
      env: BUILDTYPE=release
      node_js: 14

      cache:
        directories:
        - $HOME/.cargo
        - $TRAVIS_BUILD_DIR/native/target

      install:
        - node -v
        - which node
        - python3 --version
        - which python3
        - curl https://sh.rustup.rs -sSf > /tmp/rustup.sh
        - sh /tmp/rustup.sh -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        - source "$HOME/.cargo/env"
        - yarn install --ignore-scripts
        - neon clean
        - neon build $([ "${BUILDTYPE}" == 'debug' ] && echo "" || echo "--release")

      script:
        - yarn coverage

      after_success:
        - ./scripts/publish.sh --debug=$([ "${BUILDTYPE}" == 'debug' ] && echo "true" || echo "false")

    - language: node_js
      sudo: false
      os: osx
      osx_image: xcode12.2
      env: BUILDTYPE=release
      node_js: 14

      cache:
        directories:
        - $HOME/.cargo
        - $TRAVIS_BUILD_DIR/native/target

      install:
        - node -v
        - which node
        - curl https://sh.rustup.rs -sSf > /tmp/rustup.sh
        - sh /tmp/rustup.sh -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        - source "$HOME/.cargo/env"
        - yarn install --ignore-scripts
        - neon clean
        - travis_wait 30 neon build $([ "${BUILDTYPE}" == 'debug' ] && echo "" || echo "--release")

      script:
        - yarn test

      after_success:
        - ./scripts/publish.sh --debug=$([ "${BUILDTYPE}" == 'debug' ] && echo "true" || echo "false")
